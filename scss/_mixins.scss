// Mixin for media query
@mixin desktop {
    @media (min-width: $desktopMedium) {
        @content;
    }
}

@mixin tablet {
    @media (min-width: 500px) {
        @content;
    }
}

// subscribes style, for mobile calling
// Rogina did above changes----------------



// Mixin for centering element
// with margin-left: auto
// and margin-right: auto;
@mixin margin-center {
    margin: {
        left: auto;
        right: auto;
    }
}

// Mixin for clearing out
// margins and padding and
// setting the line-height to 1 
// ...useful mainly on typographic elements
@mixin flatten {
    margin: 0;
    padding: 0;
    line-height: 1;
}

// Visually hide an element but
// still make it accessible to 
// a screen reader
@mixin visually-hidden {
    margin: -1px;
    padding: 0;
    width: 1px;
    height: 1px;
    overflow: hidden;
    clip: rect(0 0 0 0);
    clip: rect(0, 0, 0, 0);
    position: absolute;
}

// Clear margins
@mixin first-last-el-no-margin {
    > :first-child {
        margin-top: 0;
    }
    > :last-child {
        margin-bottom: 0;
    }
}

@mixin first-el-no-margin {
    > :first-child {
        margin-top: 0;
    }
}

@mixin last-el-no-margin {
    :last-child {
        margin-bottom: 0;
    }
}

// Mixin for setting foreground
// images to cover their container
// without distortion of the 
// image
// using object-fit cover
@mixin img-cover($abs-pos: true){
    @if($abs-pos){
        position: absolute;
        top: 0;
        left: 0;
    }
    object-fit: cover;
    width: 100%;
    height: 100%;
    display: block;
}

// Mixin for having an element
// sit on top of another and
// and cover the parent element
// completely
@mixin el-cover {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

// Mixin to set links
// to not have their
// default look
@mixin plain-link($c: white){
    text-decoration: none;
    color: $c;
}

// Function to set text-color to
// a light colour or a dark
// colour depending on the 
// provided background color;
@function contrast-text-color($bgc, $ltc: white, $dtc: black){
    @if(lightness($bgc) > 50){
        @return $dtc; // lighter background
    } @else {
        @return $ltc; // darker background 
    }
}

// Layout Mixins

// Mixins for creating a flex row of
// and evenly spacing out the
// elements along the row
@mixin flex-layout-row {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
}

// Center elements in a flex
// container
@mixin flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}

// Aspect Ratio Presets
$ar-video: (9 / 16) * 100%;
$ar-square: (1 / 1) * 100%;
$ar-cinemamatic: (9 / 21) * 100%;


// Function to generate aspect
// ratio percentages
@function rp($w, $h){
    @return ($h / $w) * 100%;
}

// Aspect Ratios
$aspect-ratios: (
    'video': rp(16, 9),
    'square': rp(1,1),
    'cinema': rp(21,9),
    'photo': rp(1,1)
);

// Aspect Ratio Boxes Mixin
// This defaults to a square 
// aspect ratio
@mixin aspect-ratio-box($ar) {

    $ratio: 100%;

    @if map_has_key($aspect-ratios, $ar) {
        $ratio: map_get($aspect-ratios, $ar);
    } 

    position: relative;

    &:before {
        content: "";
        width: 1px;
        margin-left: -1px;
        float: left;
        height: 0;
        padding-top: $ratio;
    }
     
    &:after { 
        content: "";
        display: table;
        clear: both;
    }

}

// Placeholder styles
// Similar to mixins but without
// parameters
%row-item {
    width: $two-col;
    padding: $padding;
    @include first-last-el-no-margin;
    border: 1px dotted #ccc;
    @media (max-width: $phoneLandscape){
        width: $one-col;
        margin-bottom: 8%;
        &:last-child {
            margin-bottom: 0;
        }
    }
}






//Tranform

@mixin transform {
    transform: translate(-50%,50%);
}

//link

@mixin no-style-link {
    text-decoration: none;
    color: #060708;
}

//logo landing subscribes page
@mixin essential {
    font-weight: bold;
    font-family: $font;
    font-size: $font-h1;
    color: $text-color;
}
//logo other page
@mixin essential-other {
    font-weight: bold;
    font-family: $font;
    font-size: $font-h2;
    color: $text-color;
}

//layout
@mixin no-mar-pad {
    margin: 0;
    padding: 0;
}

//object fit
@mixin img-fit {
    width: 100%;
    height: 100%;
     object-fit: cover;
}

//search bar 

@mixin search-bar{
    .searchform {
        display: flex;
        margin: 0;
        overflow: hidden;
        width: 80%;
        justify-content: flex-end;
        padding-left: 3vw;
      }
      input{
        color: #060708;
      }
    
      input[type="search"] {
        display: block;
        text-align: right;
        border: 1px solid #060708;
        border-width: 0 0 2px;
        background-color: transparent;
        font-size: $font-p;
        font-family: $font;
        font-weight: bold;
        padding: 0.125em 0.225em;
        width: 100%;
        
      }
      input[type="search"]:focus {
        color:#060708;
        border-color: #060708;
        outline: none;
}
}






